<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2015-2016 The CyanogenMod Project
                   2017-2018 The LineageOS Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources>
    <!-- Path to the library that contain device specific key handler -->
    <string name="config_customKeyHandlerLib" translatable="false">/system/priv-app/PartsBin/PartsBin.apk</string>

    <!-- Name of the key handler class -->
    <string name="config_customKeyHandlerClass" translatable="false">com.aicp.device.KeyHandler</string>

    <!-- Hardware keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">64</integer>

    <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareWakeKeys">64</integer>

    <!-- Override the default detection behavior for the framework method
         android.view.ViewConfiguration#hasPermanentMenuKey().
         Valid settings are:
         0 - No change. Use the default autodetection behavior.
         1 - The device DOES have a permanent menu key; ignore autodetection.
         2 - The device DOES NOT have a permanent menu key; ignore autodetection. -->
    <integer name="config_overrideHasPermanentMenuKey">2</integer>

    <!-- Does the device have a notification/battery LED? -->
    <bool name="config_deviceHasLED">false</bool>


    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">false</bool>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option  -->
    <bool name="config_intrusiveBatteryLed">false</bool>

    <!-- Does device's LED supports fast charging ?  -->
    <bool name="config_FastChargingLedSupported">false</bool>

    <!-- Does the battery LED support multiple colors? Used to decide if the user can change the colors -->
    <bool name="config_multiColorBatteryLed">false</bool>

    <bool name="config_multiColorNotificationLed">false</bool>

    <!-- Boost the brightness on a triple press of the power button -->
    <integer name="config_triplePressOnPowerBehavior">2</integer>

    <!-- Whether device has screen with higher aspect ratio -->
    <bool name="config_haveHigherAspectRatioScreen">true</bool>

    <!-- Allow devices override audio panel location to the left side -->
    <bool name="config_audioPanelOnLeftSide">true</bool>

    <!-- Whether device has warp charging support -->
    <bool name="config_hasWarpCharger">true</bool>

    <!-- Enable dual LTE capability support-->
    <bool name="config_dual_LTE_capability">true</bool>

    <!-- Enable system navigation keys. -->
    <bool name="config_supportSystemNavigationKeys">false</bool>

    <!-- Smart Pixels -->
    <bool name="config_enableSmartPixels">true</bool>

    <!-- Does the device supports Smart Battery -->
    <bool name="config_smart_battery_available">true</bool>

    <!-- Whether or not swipe up gesture's opt-in setting is available on this device -->
    <bool name="config_swipe_up_gesture_setting_available">true</bool>

    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">false</bool>

    <!-- Whether device ignores the RSSNR signal implementation -->
    <bool name="config_ignoreRssnrSignalLevel">true</bool>

    <!-- Whether to show a custom view for FOD -->
    <bool name="config_needCustomFODView">true</bool>

    <!-- If true, the display will be shifted around in ambient mode. -->
    <bool name="config_enableBurnInProtection">true</bool>

    <!-- Statusbar Burn in protection -->
    <bool name="config_statusBarBurnInProtection">true</bool>

    <!-- Specifies the maximum burn-in offset displacement from the center. If -1, no maximum value
       will be used. -->
    <integer name="config_burnInProtectionMaxRadius">-1</integer>

    <!-- Specifies the minimum burn-in offset horizontally. -->
    <integer name="config_burnInProtectionMinHorizontalOffset">-15</integer>

    <!-- Specifies the maximum burn-in offset horizontally. -->
    <integer name="config_burnInProtectionMaxHorizontalOffset">15</integer>

    <!-- Specifies the minimum burn-in offset vertically. -->
    <integer name="config_burnInProtectionMinVerticalOffset">-40</integer>

    <!-- Specifies the maximum burn-in offset vertically. -->
    <integer name="config_burnInProtectionMaxVerticalOffset">40</integer>

    <!-- Allow automatic adjusting of the screen brightness while dozing in low power state. -->
    <bool name="config_allowAutoBrightnessWhileDozing">true</bool>

    <!-- Set this to true to enable the platform's auto-power-save modes like doze and
       app standby.  These are not enabled by default because they require a standard
       cloud-to-device messaging service for apps to interact correctly with the modes
       (such as to be able to deliver an instant message to the device even when it is
       dozing).  This should be enabled if you have such services and expect apps to
       correctly use them when installed on your device.  Otherwise, keep this disabled
       so that applications can still use their own mechanisms. -->
    <bool name="config_enableAutoPowerModes">true</bool>

    <!-- Whether device has physical tri state switch -->
    <bool name="config_hasAlertSlider">true</bool>

    <!-- The location of the devices physical tri state switch
       0: Left side
       1: Right side -->
    <integer name="config_alertSliderLocation">1</integer>

    <!-- Whether keyhandler sends intent when changing slider position -->
    <string name="config_alertSliderIntent">com.aicp.device.UPDATE_SLIDER_POSITION</string>

    <!-- Shows the required view for in-display fingerprint -->
    <bool name="config_supportsInDisplayFingerprint">true</bool>

    <!-- FOD icon dim-->
    <bool name="config_targetUsesInKernelDimming">true</bool>

    <!-- Not allow to switch to higher refresh rate when (display, ambient) brightness falls into
         the region defined by the two arrays -->
    <integer-array name="config_brightnessThresholdsOfPeakRefreshRate">
        <item>-1</item>
    </integer-array>
    <integer-array name="config_ambientThresholdsOfPeakRefreshRate">
        <item>-1</item>
    </integer-array>

    <!-- default refresh rate in the zone defined by brightness and ambient thresholds -->
    <integer name="config_defaultRefreshRateInZone">90</integer>

    <!-- The default peak refresh rate for a given device. Change this value if you want to allow
         for higher refresh rates to be automatically used out of the box -->
    <integer name="config_defaultPeakRefreshRate">90</integer>
</resources>
